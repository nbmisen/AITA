大家好
欢迎大家来到书生大模型实战营第四期的课程
我是本期get it主讲人周善平
在这节课程当中
我会给大家介绍get it的来源
并介绍一些常用的get it小秘籍
之后我会将git常用的指令赋予大家学习与参考
还会具体实操
如何在后续的项目开发中
使用git来管理我们的项目代码
在未接触git相关工具开发之前
我们与别人共同开发的时候
常用邮箱或者网盘之间进行文件点对点的交互
这种方式不仅效率低下
还有可能在传输的过程当中被别人修改
且无法溯源
且无法进行协作的开发
因为这种方式只能适合点对点之间的开发
由此我们是很需需要一个工具
来解决这样的问题
那么get it便是我们所找的这一个工具
git它是一种开源的分布式版本控制系统
使用git进行日常开发
它是可以有效的管理代码
变更历史
促进团队的协作
提高开发的效率
它拥有分支管理合并和冲突解决等功能
它可以帮助我们在不同的开发阶段
进行灵活的切换
同时保证代码的稳定性和可追溯性
和使得我们这个协同开发非常高效
第一步我们要从创建仓库开始
我们要选择在一个目录下面
使用git init来进行创建一个仓库
或者说我们从GITHUB上面直接用get clou
从GITHUB上面直接将他的仓库进行远程下载下来
这是我们创建仓库的两种方式
第二种是配置仓库
我们配配置仓库
我们需要在本地配置好我们自己的名称
与我们的注册邮箱
然后呢
这个这个配置会与我们后面的密钥的生成
息息相关
所以说我们一定要配置正确
接下来我们讲一下工作区
暂存区与本地仓库区的区别已联系
当我们在本地拥有一个项目时
这个项目旗下是拥有很多的文件的
这get it在其中
相当于是一个记录文件所变化的列表
工作区只是我们现在与这个项目
下面的所有文件
而这个暂存区它只是一个索引的文件
它就是记录着我们这个工作区当中的文件的
修改的情况和修改的历史变更
仓库区是这个隐藏的文件
这个点git
它并不是这个只完整的项目的代码的一部分
这里记录着这个项目的所有变化情况
和历史版本的完整信息
我们可以通过这个点get it进行一个溯源
在使用date的时候
我们这个工具它会实时记录你的开发动向
你是可以通过git ADD指令
去把你的开发动向进行一个保存
在所有的东西都开发完之后
可以使用git commit去保存完整你的开发记录
这样子不管你对代码如何改动
你都可以根据git的索引文件
去找回你自改动之前的所有的代码
这些是我们常用的git操作
我们常常在开发的时候会用git ADD
将当前的文件需放入暂存区域
这当改动完成后
我们会用git commit生成一个快照
并且提交到我们的本地仓库
如果说当前文件改动错误
我们可以使用git reset来撤销这一次的get AD
我们还可以还可以通过我们的git push
把我们现在已经完完整整开发完的项目
推到我们的远程仓库上
比如说像GITHUBGIE上面
或者说我们要从GITHUB或get页上面去
把我们的的项目
或者把别人的项目给拉取到本地
下载到本地
那么这个时候我们就要用到git clone
我们只需要记住这么几个指令
就能已经开始使熟悉使用这个get it
这个这个工具了
接下来我们要讲一讲git的分支属性
它get it分支管理它是一个非常强大的功能
我们使用分支的时候
就通常涉及到会与其他人共同开发一个项目
它分支是可以让很多开发人员并行工作
当需要开发新的功能
修复bug或进行实验的时候
它不会影响到我的主开发流程
我们就可以从一条开发主线上面
分支到许多的开发线进同时进行
而不影响主线的开发工作
当其他线开发完成后
我们可以将它回并为主线
以下是我们一些常用的指令
我们只需要大概的去记住前面几个常用指令
就已经能能熟悉使用git了
我们接下来要根据跟着我们项目大概走一遍
我们就能有一个大致的印象
欢迎回来
接下来进入我们的get实战环节
我们打开一下我们这个文档的总页面
我们要对这个文档进行一个fork
将这个仓库fork到我们本地的仓库当中
目前就是在一个folk的环境当中
好现在已经fork到我们本地的仓库
我们要对这个仓库
将他将他的文件下载到我们的那个开发机当中
我们现在创建了一个开发机
我们现在进入开发机
进入开发机之后
我们点击这个code server
然后呢
现在在我们这个终端当中
我们就可以去把我们刚刚fork下来的仓库
去下载到本地
去找到这里
去看到这个code下面有个HTTPS复制粘贴enter
现在我们将这个仓库下载到我们现在本地
静待它的下载完成好了
现在呢我们要我们要去看一下
我们他有没有下载到我们本地
目前它已经下载到我们本地了
然后呢如果说在这里没看到的话
我们在这里点击刷新一下就可以了
然后呢现在呢我们就CD到这个
仓在我仓库里面
现在呢我们要对它进行一个就是分支
现在我们看一下现在分支是在camp three上面的
我们现在呢要要给他
就是说归属一下我们的分支
因为接下来我们要在这个分支下面去
提交我们的作品
写我们的作业
那么这个时候呢我们就得要要去输入这个指令
好目前我们已经将这个分支移到class分支下面了
就如图所示
接下来呢
我们要在这个分支下面去创建一个
属于我们自己的开发分支
那如何创建呢
我们也跟他是一样的
我们一样的
就是说get it check out
好那创建一个属于我们自己的开发分支
那么这个这个这里
这个时候我们要根据你的自己的UID去实际
创建一个你自己的UID名称的是分支
好现在已经创建好了
接下来呢我们看一下
我们分支里面是不是就剩一个i cam了
来看一下
看到了吧
我们现在分支里面就剩下一个i cam for了
好接下来呢接下来我们看一下我们的文档
点击在我们的在文档这里点击到cam for
如果是cam thread
就点到cam for
然后呢接下来呢我们点击一下我们的文档
在我们的六点
五这里我已经把相关的介绍文件已经付给大家
大家可以根据我的相关的介绍文件来进行
一个是直接使用
然后呢
我们现在呢就是直接将这
我们先找到我们这个路径
在i come for
好我们现在已经有什么
看一下他目前有那么几个
其其他同学写好的markdown
那么我们这个时候呢
我们是可以去创建一个属于是我们自己的markdown
那现在呢因为我之前已经创建好了
我们现我现在就直接就是使用即可
看这里这个就是我的markdown
如果啊我给大家举个例子
创建直接就touch一个叫做id点
MD这个是我们在刚刚的一个markdown
我们看一下
看一下现在有没有在这里
我们刷新一下
是不是这里就出现了我们的刚刚的一个id
点麻杠
然后呢
我们现在呢将我们的这个文件模板复制下来
在这里可以改成是你自己的文件模板
记住哦
要在要在这些地方多打几个空格
这样子的话待会在展示的时候
你就不会出现把他们全部连成一块的情况
好现在呢我们要将他们给提交上去
那么我这个时候呢我们要输入git ADD指令
然后呢接下来呢我们还要需要将它给提交上去
然后这个时候我们就要输入一个git commit指令
然后呢将输入这个杠M
就是说提示要这个这一段叫什么名字
然后呢我们就要叫做AD git
Come for
36introduction
提交好
目前我们已经出现了这样的几个提示好
接下来呢我们要要将这个
我们要将这个给提交上去
我们现在要怎么
然后我们要把这个东西
提交到我们刚刚的远程仓库上面
我们要怎么办呢
输入git push
来我们现在将它推上去
好这里我们要使用我们的GITHUB去登录
然后呢就允许即可
然后呢copy打开
好直接就进去
将刚刚我们获得到的这个输入进去
我这里是7167
7167
然后呢是22CF2
继续在这里直接授权即可
好授权完成
点击这里
接下来呢它会出现一个像这样的分支
分支的报报警
这种就说明我们现在已经成功地推上去了
现在呢我们要去
要去我们的远程仓库去看一眼哎
现在点击一下
我们看看下我们的远程仓库
刷新一下
点击下我们远程仓库看一眼哦
好现在已经出现了我们的远程仓库
然后我们看一下我们是不是已经提交上来
看到了吗
这是我们已经刚刚提交上来的分支
然后再点击i come for里面看一下我们有没有出现
看我们原来的这个就是我
我这是我创建的id markdown
它已经被推送到这个分支上面了
这个时候呢我们要点击回这个这个实验
这里按照我们要点击点击回
在网上点击一层
我们就是刚刚我们刚刚我们这是我们的class分支
已经已经回来了
然后我们回头看一下我们刚刚的仓库
OK现在已经找到了我们的仓库
直接点击下contribute进行一个pr的提交
然后在这个pr在这个pr的提交当中
我们是要输入一个
我们要将我们的分支提交到class分支上
对看到了吗
提交
然后呢将这个输入进去
就是中间这里要改成你的UID号
最后我们点击一下这个create pr即可完成
好目前我们已经将我们的分支已经提交上去了
然后呢
当这样子
我们我们本节课程的实操环节就完整的结束了
希望大家能能够将这个实操环节给多重复几遍
就是说去多了解一下git
然后我们就可以去根据我们我们的实操的过程
去把我们的get it更加的精进
get it是十分有用的一个工具
接下来我们就是非常恭喜大家
就已经完成了get it的学习
接下来可以去尝试一下更多的项目
去学习一些更多的知识
欢迎大家步入大模型的世界