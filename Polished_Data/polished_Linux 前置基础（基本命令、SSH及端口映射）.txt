大家好，欢迎来到书生大魔营试家园第四期。今天的视频是入门岛的第一节课程，内容为LINUX前置基础知识。我是本节课的主讲人郭志航。本节课将重点讲解SSH（Secure Shell）的7端口映射，并使用书生开发机平台进行详细讲解。随后，我们将简要介绍LINUX的基础命令，这些命令在后续课程中会频繁使用。那么，我们直接开始吧。

首先，我们来了解一下什么是SSH。SSH的全称是Secure Shell，中文翻译为安全外壳。它是一种网络安全协议，通过加密和认证机制，实现安全的访问和文件传输等业务。SSH协议通过对网络数据进行加密和验证，在不安全的网络环境中提供了安全的网络服务。SSH采用CS（Client-Server）架构，由服务器和客户端组成。为了建立安全的SSH通道，双方需要先建立TCP连接，然后协商使用的版本号和各类算法，并生成相同的会话密钥，用于后续的对称加密。在完成用户认证后，双方即可建立会话，进行数据交互。

接下来，我们将进行SSH远程连接的实操。首先，打开课程文档。在课程的第一部分，已经介绍了书生开发机平台的使用方法，这里不再赘述。我们直接进入第二部分，即如何使用VS Code进行远程连接。在使用VS Code进行远程连接之前，需要安装一个VS Code扩展。如果已经安装了VS Code，请打开它，点击左侧的扩展页面，在搜索框中输入“SSH”，选择第一个插件并安装。安装完成后，我们来到开发机平台，创建一个开发机。远程连接的一大优势在于，如果你使用远程办公，可以通过SSH远程连接开发机，从而在本地进行开发。此外，如果你需要运行本地代码但又缺乏环境，远程连接将非常有用。

开发机创建完成后，点击“SSH连接”，复制登录命令。这里的38121是开发机使用的SSH端口号。如果没有这个端口，将无法连接SSH，且每个人的端口号可能不同，因此在连接开发机时，如果遇到无法连接的情况，请检查是否端口号有误。接着，打开VS Code，打开左侧远程连接的扩展界面，或点击右下角的按钮，将之前复制的登录命令粘贴到弹出的窗口中，按回车键配置文件。选择默认配置即可，当然你也可以根据需要进行自定义。

然后，我们回到开发机平台，将密码复制到提示框中并按回车键，进行指纹验证，点击“继续”。首先，我们打开配置文件，查看其内容。其中，“host”是主机IP或域名，“hostname”是主机名，还有SSH端口以及登录用户信息。接下来，我们尝试连接开发机。远程连接完成后，可以选择打开的文件夹，即工作目录。下次进行远程连接时，无需再次输入登录命令等信息，只需打开VS Code的远程连接，即可看到第一次连接的开发机信息。

大家可能会注意到，在连接开发机时输入了多次密码，这非常麻烦。我们可以通过SSH密钥来跳过输入密码的步骤。在SSH命令中，我们使用“ssh-keygen”命令生成密钥。SSH密钥是一种安全且便捷的登录认证方式，用于在SSH协议中进行身份验证和加密通信。在这里，我们使用RSA算法生成密钥。通过按下Win+R打开运行框，输入“cmd”并按回车键，进入命令提示符界面。

以上就是今天的课程内容。希望大家通过本节课的学习，能够掌握SSH的基本概念和远程连接的方法，为后续的学习打下坚实的基础。感谢大家的参与，我们下节课再见！
以下是润色后的文本，保持了专业术语的准确性，并使表达更加流畅自然：

---

首先，输入 `PowerShell` 命令，然后将命令粘贴到终端中，并连续按回车键。在 `PowerShell` 中，可以使用 `Get-Content` 命令查看生成的密钥。如果您使用的是 Linux 操作系统，可以使用 `cat` 命令。之后，我们返回开发机平台。在首页，点击“配置 SSH”，然后选择“添加 SSH 公钥”。将刚刚生成的密钥复制并粘贴到公钥框中，名称会自动被识别。最后，点击“立即添加 SSH”，完成配置。这样，下次连接开发机时，将跳过密码输入步骤。

接下来，我们介绍什么是端口映射。端口映射是一种网络技术，它将外网的任意端口映射到内网的相应端口，实现内网与外网之间的通讯。通过端口映射，可以在外网访问内网中的服务或应用，实现跨越网络的便捷通讯。我们来看下面这张图，个人PC会远程连接到开发机，唯一暴露的37367端口，这在SSH配置中提到过。每个人的开发机暴露端口可能不同，暴露端口作为中转站进行流量转发。当个人PC执行SSH命令后，SSH客户端在本地机器的7860端口进行监听。任何发送到本地7860端口的流量，都会被SSH隧道转发到远程服务器的127.0.0.1地址的7860端口。这意味着，即使开发机的端口未暴露给外部网络，我们也能通过这个隧道安全访问远程服务器上的服务。

下面，我们介绍如何进行端口映射。回到开发机界面，找到我们的开发机，然后点击“自定义服务”。复制第二条命令，进入开发机。我们来到开发机的Web UI界面，打开Notebook界面，然后新建一个“Hello World”项目。选择“PY”，部署课程中的代码到创建的文件夹。在运行代码之前，需要安装主力机库。这里，我已经安装好了。然后在终端中运行 `holder.py`。几分钟后，运行完成。我们将刚才复制的命令粘贴到抛售，这个命令不会返回任何内容，表明端口映射正在运行中。在网页中打开Web UI界面，然后在网页中打开链接，即可看到Web UI界面。

最后，我们简要介绍Linux基础知识。首先是文件管理相关命令，常用的有 `touch`（创建文件）、`mkdir`（创建目录）、`cd`（切换所在目录）、`pwd`（查看当前所在目录）和 `cat`（查看文件内容）。右边的图是Linux系统的目录结构，其中斜杠表示根目录。根目录下有许多系统所需的目录和文件，一个点表示当前目录，两个点表示上级目录。下面是vi和vim。vi是一个非常基础的文本编辑器，在UNIX系统中非常常见，功能较为有限，主要提供基本的文本编辑功能。而VIM是vi的增强版本，提供了更多功能和改进，包括语法高亮、代码补全、多窗口编辑和宏录制等。下面的图展示了VIM的三种模式及常用操作。关于`cp`命令使用较多，在后续课程中会经常用到。使用`cp`命令复制的文件是原文件的副本，与原文件完全独立。可以复制文件和目录，使用`-r`选项可以递归复制目录。默认情况下，如果目标位置已存在同名文件，则会覆盖目标文件。如果我们要使用模型，`copy`操作会占用大量磁盘空间。

注意：保留 `InternLM`、`Lagent`、`MindSearch`、`LLamaIndex`、`OpenCompass`、`Xtuner`、`Multi-agent`、`书生浦语`、`InternVL2`、`transformer` 等专业术语的原有形式。如果有类似这样的术语但书写错误，请修改为上述术语。

---
因此，我们通常使用LN命令，这与Windows中的快捷方式类似。在Linux中，链接主要分为两种类型：硬链接和软链接。硬链接意味着一个文件可以拥有多个名称，而软链接则通过创建一个特殊类型的文件来实现，该文件的内容指向另一个文件的位置。硬链接存在于同一个文件系统中，而软链接则可以跨越不同的文件系统。MV命令和RM命令的使用方式相近，但MV命令主要用于移动文件或目录，同时也可以用于重命名；而RM命令则用于删除文件或目录。最后一个要介绍的命令是sad命令。SET命令是一种流编辑器，主要用于文本处理，尤其在处理复杂文件操作时非常有用，并在后续课程中会频繁使用。下面是SED的一些常用命令及其参数说明。

以上就是LINUX入门前置知识的全部内容。如果您想深入了解Linux的更多知识，可以参考我们的课程文档。如果对我们的课程感到满意，请给予点赞支持。最后，我们非常欢迎观看视频的朋友们报名参加我们的“初生不育大陆学人出院营第四期”，我们期待在第四期的课程中与您相遇。

注意：保留以下专业术语的原有形式：InternLM, Lagent, MindSearch, LLamaIndex, OpenCompass, Xtuner, Multi-agent, 书生浦语, InternVL2, transformer。如果存在类似但书写错误的术语，请修改为上述术语。